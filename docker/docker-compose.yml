version: '2.1'

services:

# Applications

  config-service:
    image: ernestoacostacuba/config-service:latest
    container_name: config-service
    ports:
      - '8888:8888'
      - '9888:9888'
    environment:
      # Buildpacks environment variable to configure the number of threads in memory calculation
      - BPL_JVM_THREAD_COUNT=50
      # Buildpacks environment variable to enable debug through a socket on port 9888
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=9888
    networks:
      - catalog-network

  catalog-service:
    image: ernestoacostacuba/catalog-service:latest
    container_name: catalog-service
    environment:
      BPL_DEBUG_ENABLED: "true"   # Activates the JVM configuration for accepting debug connections
      BPL_DEBUG_PORT: 8001      # Debug connections are accepted via a socket on port 8001
      BPL_JVM_THREAD_COUNT: 50
      SPRING_DATASOURCE_URL: jdbc:mysql://polar-mysql:3306/polardb_catalog?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_PROFILES_ACTIVE: 'mysqldev'
      DB_USER: 'catalog_user'
      DB_PASSWORD: 'TXlzcWwzMjFDYXRhbG9n'
      MYSQL_ROOT_PASSWORD: 'password'
      DB_HOST: 'polar-mysql'
      DB_NAME: ':polardb_catalog'
    ports:
      - '8001:8001' # The port where the JVM will listen for debug connections
      - '9001:9001'
    depends_on:
      polar-mysql:
        condition: service_healthy
    networks:
      - catalog-network

  order-service:
    image: ernestoacostacuba/order-service:latest
    container_name: order-service
    environment:
      BPL_DEBUG_ENABLED: "true"   # Activates the JVM configuration for accepting debug connections
      BPL_DEBUG_PORT: 8002      # Debug connections are accepted via a socket on port 8001
      BPL_JVM_THREAD_COUNT: 50
      POLAR_CATALOG_SERVICE_URI: http://catalog-service:9001
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_FLYWAY_URL: jdbc:mysql://polar-mysql:3306/polardb_catalog?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_R2DBC_URL: r2dbc:mysql://polar-mysql:3306/polardb_catalog?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_PROFILES_ACTIVE: 'mysqldev'
      DB_USER: 'catalog_user'
      DB_PASSWORD: 'TXlzcWwzMjFDYXRhbG9n'
      MYSQL_ROOT_PASSWORD: 'password'
      DB_HOST: 'polar-mysql'
      DB_NAME: ':polardb_catalog'
    ports:
      - '8002:8002' # The port where the JVM will listen for debug connections
      - '9002:9002'
    depends_on:
      polar-mysql:
        condition: service_healthy
    networks:
      - catalog-network

  edge-service:
    image: ernestoacostacuba/edge-service:latest
    container_name: edge-service
    environment:
      BPL_DEBUG_ENABLED: "true"   # Activates the JVM configuration for accepting debug connections
      BPL_DEBUG_PORT: 8000      # Debug connections are accepted via a socket on port 8001
      BPL_JVM_THREAD_COUNT: 50
      CATALOG_SERVICE_URI: http://catalog-service:9001
      ORDER_SERVICE_URI: http://order-service:9002
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_REDIS_HOST: polar-redis
    ports:
      - '8000:8000' # The port where the JVM will listen for debug connections
      - '9000:9000'
    depends_on:
      - polar-redis
    networks:
      - catalog-network

 # Backing Services

  polar-mysql:
    image: mysql:latest
    container_name: polar-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: polardb_catalog
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./polar_mysql_db:/var/lib/mysql:z
      - ./mysql/01.sql:/docker-entrypoint-initdb.d/01.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h",  "localhost"]
      timeout: 45s
      interval: 10s
      retries: 10
    depends_on:
      - config-service      
    networks:
      - catalog-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - '9090:8080'
    depends_on:
      - polar-mysql
    networks:
      - catalog-network

  polar-redis:
      image: "redis:7.0"
      container_name: "polar-redis"
      ports:
        - '6379:6379'   

 # Event-driven Services  
  zookeeper:
    image: zookeeper:3.4.9
    container_name: zookeeper
    restart: "no"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    ports:
      - "2181:2181"
    volumes:
      - ./polar_zookeeper_data/data:/data:z
      - ./polar_zookeeper_data/datalog:/datalog:z
    networks:
      - catalog-network

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka
    restart: "no"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9091:9091"
    volumes:
      - ./polar_kafka_data:/var/lib/kafka/data:z
    depends_on:
      - zookeeper 
    networks:
      - catalog-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19091"
    ports:
      - "9000:9000"
    depends_on:
      - kafka 
    networks:
      - catalog-network

volumes:
  polar_mysql_db:
  polar_kafka_data:

networks:
  catalog-network:
    driver: bridge