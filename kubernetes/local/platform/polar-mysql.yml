# Define a 'Service' To Expose MySQL to Other Services
apiVersion: v1
kind: Service
metadata:
  name: polar-mysql
  labels:
    app: polar-mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: polar-mysql
    tier: database
  clusterIP: None # DNS is used, so clusterIP is not needed
---
# Deployment specification begins here
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polar-mysql
  labels:
    app: polar-mysql
    tier: database
spec:
  selector: # mySQL Pod Should contain same labels
    matchLabels:
      app: polar-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: polar-mysql
        tier: database
    spec:
      containers:
        - name: polar-mysql
          image: mysql:8.0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: polar-mysql-creds
                  key: polar-mysql-root-pasword
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: polar-mysql-conf
                  key: polar-mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: polar-mysql-creds
                  key: polar-mysql-pasword
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: polar-mysql-conf
                  key: polar-mysql-database
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
            limits:
              cpu: "1500m"
              memory: "1Gi"
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-data
              mountPath: "/var/lib/mysql"
              subPath: "mysql"  
              
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: polar-mysql-data-disk
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: polar-mysql-data-disk
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce
